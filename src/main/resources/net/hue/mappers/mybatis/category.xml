<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Category">
	<!-- 모든 카테고리 리스트 -->
	<select id="category_all" parameterType="category" resultType="category">
		select lcate.no as lno, lcate.name as lname, lcate.step as lstep, scate.no
		as sno, scate.name as sname, scate.step as sstep
		from (select * from bigcategory order by step asc) lcate left outer join
		(select * from smallcategory order by lcno asc, step asc) scate
		on lcate.no = scate.lcno order by lstep asc, sstep asc
	</select>

	<!-- 대분류 추가 -->
	<insert id="insertLCategory" parameterType="category">
		<selectKey keyProperty="lstep" resultType="java.lang.Integer" order="BEFORE">
			select coalesce(max(step), 0) + 1 from bigcategory
		</selectKey>
		insert into bigcategory (no, name, step) values (bigcateseq.nextval,
		#{lname}, #{lstep})
	</insert>
	<!-- 소분류 추가 -->
	<insert id="insertSCategory" parameterType="category">
		<selectKey keyProperty="sstep" resultType="java.lang.Integer" order="BEFORE">
			select coalesce(max(step), 0) + 1 from smallcategory where lcno = #{lno}
		</selectKey>
		insert into smallcategory (no, name, step, lcno) values (smallcateseq.nextval, 
		#{sname}, #{sstep}, #{lno})
	</insert>


	<!-- 대분류만 -->
	<select id="getLCategory" parameterType="category" resultType="category">
		select lcate.no as lno, lcate.name as lname, lcate.step as lstep from
		(select * from bigcategory order by step asc) lcate order by lstep asc
	</select>
	<!-- 소분류만 -->
	<select id="getSCategory" parameterType="category" resultType="category">
		select scate.no as sno, scate.name as sname, scate.step as sstep from
		(select * from smallcategory order by lcno asc, step asc) scate where
		lcno=#{lno} order by lcno asc, step asc
	</select>

	<!-- 대분류 카운트 -->
	<select id="countLcategory" resultType="int">
		select count(*) as cnt from bigcategory
	</select>
	<!-- 소분류 카운트 -->
	<select id="countScateory" resultType="int">
		select count(*) as cnt from smallcategory where lcno = #{lno}
	</select>

	<!-- 대분류 삭제 -->
	<update id="deleteLCategoryU" parameterType="category">
		update bigcategory set step = step - 1 where step > #{lstep}
	</update>
	<delete id="deleteLCategory">
		delete from bigcategory where no = #{lno}
	</delete>
	<!-- 소분류 삭제 -->
	<update id="updateSStep" >
		<![CDATA[
        update smallcategory set step = step - 1
        where lcno = (select lcno from smallcategory where no = #{sno}) and step > #{sstep}
        ]]>
	</update>
	<delete id="deleteSCategory">
		<![CDATA[
        delete from smallcategory where no = #{sno}
        ]]>
	</delete>
	<select id="getSStep" resultType="int">
		SELECT step FROM smallcategory WHERE no = #{sno}
	</select>
	
	<!-- 대분류 수정 -->
	<update id="updateLCategoryName">
		update bigcategory set name = #{lcname} where no = #{lno}
	</update>
	<!-- 소분류 수정 -->
	<update id="updateSCategoryName">
		update smallcategory set name= #{scname} where no = #{sno}
	</update>
	
	<!-- 대분류 이동 위 -->
	<update id="updateUpLStep">
		<![CDATA[
  update bigcategory
  set step =
    case
      when step = #{lstep} - 1 then #{lstep}
      when no = #{lno} then step - 1
      else step
    end
  where step = #{lstep} - 1 or no = #{lno}
  ]]>
	</update>
	<!-- 대분류 이동 아래 -->
	<update id="updateDownLStep">
		<![CDATA[
  update bigcategory
  set step =
    case
      when step = #{lstep} + 1 then #{lstep}
      when no = #{lno} then step + 1
      else step
    end
  where step = #{lstep} + 1 or no = #{lno}
  ]]>
	</update>
	<!-- 소분류 이동 위 -->
	<update id="updateUpSStep">
  <![CDATA[
  update smallcategory
  set step =
    case
      when step = #{sstep} - 1 and lcno = #{lno} then step + 1
      when no = #{sno} then step - 1
      else step
    end
  where (step = #{sstep} - 1 and lcno = #{lno}) or no = #{sno}
  ]]>
	</update>
	<!-- 소분류 이동 아래 -->
	<update id="updateDownSStep">
  <![CDATA[
  update smallcategory
  set step =
    case
      when step = #{sstep} + 1 and lcno = #{lno} then step - 1
      when no = #{sno} then step + 1
      else step
    end
  where (step = #{sstep} + 1 and lcno = #{lno}) or no = #{sno}
  ]]>
	</update>

</mapper>